name: build
on:
  push:
jobs:
  postgresql-workloadf:
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ycsb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          postgres -c max_worker_processes=1 -c max_parallel_workers=0 -c max_parallel_workers_per_gather=0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Install Python 2
        run: |
          sudo apt-get update
          sudo apt-get install -y python2

      - name: Download YCSB and PostgreSQL JDBC driver
        run: |
          wget https://github.com/brianfrankcooper/YCSB/releases/download/0.17.0/ycsb-0.17.0.tar.gz
          tar xfvz ycsb-0.17.0.tar.gz
          # Modify YCSB script to use Python 2
          sed -i '1s/python/python2/' ycsb-0.17.0/bin/ycsb
          wget -P ycsb-0.17.0/lib/ https://jdbc.postgresql.org/download/postgresql-42.6.0.jar

      - name: Create workload configuration
        run: |
          mkdir -p workloads
          cat > ./workloads/workloadf <<EOL
          workload=site.ycsb.workloads.CoreWorkload
          readallfields=true
          readproportion=0.5
          updateproportion=0.5
          scanproportion=0
          insertproportion=0
          requestdistribution=zipfian
          recordcount=100000
          operationcount=100000
          fieldcount=3
          fieldlength=100
          EOL

      - name: Create database table
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d ycsb -c \
            "CREATE TABLE IF NOT EXISTS usertable (
              ycsb_key VARCHAR(255) PRIMARY KEY,
              field0 TEXT,
              field1 TEXT,
              field2 TEXT
            );"

      - name: Load initial data
        run: |
          cd ycsb-0.17.0
          ./bin/ycsb load jdbc -s -P ../workloads/workloadf \
            -p db.driver=org.postgresql.Driver \
            -p db.url=jdbc:postgresql://localhost:5432/ycsb \
            -p db.user=postgres \
            -p db.passwd=postgres \
            -p jdbc.fetchsize=10 \
            -p jdbc.autocommit=true \
            -p db.batchsize=1000

      - name: Run Workload F
        run: |
          cd ycsb-0.17.0
          ./bin/ycsb run jdbc -s -P ../workloads/workloadf \
            -p db.driver=org.postgresql.Driver \
            -p db.url=jdbc:postgresql://localhost:5432/ycsb \
            -p db.user=postgres \
            -p db.passwd=postgres \
            -p jdbc.fetchsize=10 \
            -p jdbc.autocommit=true \
            -p db.batchsize=1000

# Modified foundationdb-workloadf job
foundationdb-workloadf:
  runs-on: ubuntu-22.04
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Python 2
      run: |
        sudo apt-get update
        sudo apt-get install -y python2

    - name: Install FoundationDB server and client
      run: |
        sudo apt-get update
        curl -LO https://github.com/apple/foundationdb/releases/download/7.1.53/foundationdb-server_7.1.53-1_amd64.deb
        curl -LO https://github.com/apple/foundationdb/releases/download/7.1.53/foundationdb-clients_7.1.53-1_amd64.deb
        sudo dpkg -i foundationdb-clients_7.1.53-1_amd64.deb
        sudo dpkg -i foundationdb-server_7.1.53-1_amd64.deb

    - name: Optimize FoundationDB configuration
      run: |
        # Get number of available cores
        CORES=$(nproc)
        
        # Calculate memory allocation (80% of available memory)
        MEMORY=$(free -b | awk '/Mem:/ {printf "%d", $2 * 0.8}')
        
        # Generate optimized configuration
        sudo tee /etc/foundationdb/foundationdb.conf > /dev/null <<EOL
        [general]
        restart_delay = 60
        initial_reconnect_delay = 1
        [fdbserver]
        process_count = $CORES
        listen_address = public
        memory = $MEMORY
        storage_memory = $((MEMORY / 2))
        metrics_cluster = 
        [backup_agent]
        enabled = false
        [simulation]
        enabled = false
        EOL

        # Configure network options
        sudo sysctl -w net.core.somaxconn=10000
        sudo sysctl -w net.ipv4.tcp_max_syn_backlog=10000

        # Restart FDB with new configuration
        sudo systemctl restart foundationdb
        sleep 5

    - name: Copy cluster file to workspace
      run: |
        sudo cp /etc/foundationdb/fdb.cluster .

    - name: Build YCSB FDB binding
      run: |
        git clone --branch 0.17.0 --depth 1 https://github.com/brianfrankcooper/YCSB.git
        cd YCSB/foundationdb
        mvn clean package -DskipTests

    - name: Run Workload F with optimized settings
      run: |
        cd YCSB
        sed -i '1s/python/python2/' ./bin/ycsb
        
        # Load data with high concurrency
        ./bin/ycsb load foundationdb -s -P workloads/workloadf \
          -p foundationdb.clusterfile=../fdb.cluster \
          -p foundationdb.concurrency=$(nproc) \
          -threads $(nproc)
        
        # Run benchmark with maximum throughput settings
        ./bin/ycsb run foundationdb -s -P workloads/workloadf \
          -p foundationdb.clusterfile=../fdb.cluster \
          -p foundationdb.keyprefix=test \
          -p foundationdb.concurrency=$(nproc) \
          -p foundationdb.max_retries=100 \
          -p foundationdb.transaction_timeout=60000 \
          -threads $(nproc)
